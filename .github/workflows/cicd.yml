name: ci

on:
  push:
    branches: ["master"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: "17.x"

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: "./node_modules"
          key: node_modules-${{ hashFiles('./package.json', './package-lock.json') }}

      - name: Cache ~/.elm
        uses: actions/cache@v3
        with:
          path: ~/.elm
          key: elm-${{ hashFiles('./elm.json', './elm-tooling.json') }}

      - name: npm ci
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        env:
          NO_ELM_TOOLING_INSTALL: 1
        run: npm ci

      - name: elm-tooling install
        run: npx --no elm-tooling install

      - name: run build
        run: npm run build

      - name: test # requires build to have run
        run: npx elm-test@0.19.1-revision7 # elm-test isn't included in elm-tooling and usually expects a global install :/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          retention-days: 1

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: "./dist"

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
